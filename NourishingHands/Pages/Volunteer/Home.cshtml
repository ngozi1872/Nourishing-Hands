@page
@model NourishingHands.Pages.Volunteer.HomeModel
@{
    Layout = "_NhLayout";
}


<div class="section">
    <div class="container">

        <div class="row">
            <div class="col-lg-12">
                <div class="cart_totals">
                    <div class="heading_s1 mb-3">
                        @if (Model.HasPersonRecord)
                        {
                            <h6>Hello @Model.Person.FirstName!</h6>
                        }
                        <div class="form-group">
                            <div class="form-note">Click <a style="color:#FEBC34; font-weight:600" asp-page="/Mentor/Application">Edit</a> update your personal information.</div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-12">
                            <div class="medium_divider"></div>
                        </div>
                    </div>

                    <div class="heading_s1 mb-3">
                        <h6>Volunteer for events below</h6>
                    </div>
                    <div class="table-responsive">

                        <table class="table" id="manageEvent">
                            <thead>
                                <tr>
                                    <th class="product-name">Event</th>
                                    @*<th class="product-price">Description</th>*@
                                    <th class="product-remove">Location</th>
                                    @*<th class="product-remove">Address</th>*@
                                    <th class="product-remove">Date</th>
                                    <th class="product-remove">Time</th>
                                    <th class="product-remove"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Events.Count > 0)
                                {
                                    @foreach (var nhEvent in Model.Events)
                                    {
                                        <tr>
                                            <td class="product-name">@nhEvent.Name</td>
                                            @*<td class="product-name">@nhEvent.Description</td>*@
                                            <td class="product-name">@nhEvent.Location</td>
                                            @*<td class="product-name">@nhEvent.Address</td>*@
                                            <td class="product-name">@Convert.ToString(string.Format("{0:MM/dd/yyyy}", nhEvent.EventStartDate))</td>
                                            <td class="product-name">@nhEvent.StartTime - @nhEvent.EndTime</td>
                                            <td>
                                                <a class="btn btn-default btn-sm float-left pull-left edit" style="width:100px;" href="#eventModel" data-toggle="modal" >
                                                    Sign-up
                                                </a>
                                                <input type="hidden" name="eventID" id="eventID" asp-for="@nhEvent.Id" />
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td class="product-name"><div>No Data</div></td>
                                    </tr>

                                }

                            </tbody>

                            <tfoot>
                                <tr>
                                </tr>
                            </tfoot>
                        </table>
                    </div>

                </div>
            </div>
        </div>
        <div class="modal fade" id="eventModel">
            <div class="modal-dialog">
                <div class="modal-content">
                    <form method="post" asp-page="Home" asp-page-handler="AddVoluntaryForEvent">
                        <div class="modal-header" style="background-color:#FEBC34">
                            <h3 class="modal-title" style="color:white">Confirm Sign-up</h3>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true" style="color:white">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <p>Are you sure you want to volunteer for this event?</p>
                            <input type="hidden" name="eventID" id="eventID" />
                        </div>
                        <div class="modal-footer">
                            <input type="submit" value="Yes" class="btn btn-success" />
                            <input type="button" value="Cancel" class="btn btn-primary" data-dismiss="modal" />
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <div class="medium_divider"></div>
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <div class="medium_divider"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript" src="~/assets/js/jquery.inputmask.js" charset="utf-8"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    <script type="text/javascript">


        (function () {
            'use strict';
            window.addEventListener('load', function () {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                var forms = document.getElementsByClassName('needs-validation');
                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();

        $(function () {
            $('[data-toggle="tooltip"]').tooltip()
        })

        $(document).ready(function () {

            $("table#manageEvent .edit").click(function () {
                var eventID = $(this).parent().find("#eventID").val();
                $("#eventModel").find("#eventID").val(eventID);
            });

    });

    </script>
}
